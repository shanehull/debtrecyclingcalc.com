package templates

import (
    "fmt"
    "golang.org/x/text/language"
    "golang.org/x/text/message"

    "debtrecyclingcalc.com/internal/calc"
)

var firstPositive = -1

func getFirstPositiveYear(data []float64) int {
    for i, value := range data {
       if value > 0 {
               return i+1
       }
    }
    return -1
}

func getYearsIndex(numYears int) int {
    if numYears == 0 {
        return 0
    }
    return numYears -1
}

func printHumanInt(value int) string {
    p := message.NewPrinter(language.English)
    return p.Sprintf("%d", value)
}

templ metrics(data *calc.DebtRecyclingData, params *calc.DebtRecyclingParameters) {
    <div class="text-center p-4 mb-4 mx-auto bg-stone-50 shadow-md rounded-lg max-w-md">
      <ul class="flex-col text-sm md:text-lg">
        <li>
            <strong>
                <span class="text-xl">
                💰 
                </span>
                Portfolio Value:
            </strong>
            { fmt.Sprintf("$%s", printHumanInt(int(data.PortfolioValue[getYearsIndex(params.NumYears)]))) }
        </li>
        <li>
            <strong>

                <span class="text-xl">
                💵 
                </span>
                Year { fmt.Sprintf("%d", params.NumYears) } Dividends:
                </strong>
                { fmt.Sprintf("$%s", printHumanInt(int(data.DividendReturns[getYearsIndex(params.NumYears)]))) }
        </li>
        <li>
            <strong>
                <span class="text-xl">
                🏦 
                </span>
                Year { fmt.Sprintf("%d", params.NumYears) } Tax Refund:
            </strong>
            { fmt.Sprintf("$%s", printHumanInt(int(data.TaxRefunds[getYearsIndex(params.NumYears)]))) }
        </li>
        <li>
            <strong>
                <span class="text-xl">
                ✅ 
                </span>
                Net Positive In:
            </strong>
            { fmt.Sprintf("%d years", getFirstPositiveYear(data.NetPosition)) }
        </li>
        <li>
            <strong>
                <span class="text-xl">
                📈 
                </span>
                CAGR:
            </strong>
            { fmt.Sprintf("%.2f", calc.CAGR(data.TotalInvested,data.TotalValue,params.NumYears)*100) }%
        </li>
      </ul>
    </div>
}
